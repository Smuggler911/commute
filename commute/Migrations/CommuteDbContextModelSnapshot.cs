// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using commute.Database;

#nullable disable

namespace commute.Migrations
{
    [DbContext(typeof(CommuteDbContext))]
    partial class CommuteDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.3.24172.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("commute.Entity.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("location_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LocationId"));

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision")
                        .HasColumnName("Latitude");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("location_name");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision")
                        .HasColumnName("Longitude");

                    b.HasKey("LocationId");

                    b.ToTable("location");

                    b.HasData(
                        new
                        {
                            LocationId = 1,
                            Latitude = 19.045764999999999,
                            LocationName = "CityA",
                            Longitude = 10.4636
                        },
                        new
                        {
                            LocationId = 2,
                            Latitude = 20.045764999999999,
                            LocationName = "CityB",
                            Longitude = 9.5635999999999992
                        },
                        new
                        {
                            LocationId = 3,
                            Latitude = 18.67765,
                            LocationName = "CityC",
                            Longitude = 11.467460000000001
                        },
                        new
                        {
                            LocationId = 4,
                            Latitude = 30.065576499999999,
                            LocationName = "CityD",
                            Longitude = 8.6636000000000006
                        });
                });

            modelBuilder.Entity("commute.Entity.Transport", b =>
                {
                    b.Property<int>("TransportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("transport_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TransportId"));

                    b.Property<int>("FkLocationId")
                        .HasColumnType("integer")
                        .HasColumnName("location_id");

                    b.Property<string>("TransportName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("transport_name");

                    b.HasKey("TransportId");

                    b.HasIndex("FkLocationId");

                    b.ToTable("transport");

                    b.HasData(
                        new
                        {
                            TransportId = 1,
                            FkLocationId = 1,
                            TransportName = "Airplane"
                        },
                        new
                        {
                            TransportId = 2,
                            FkLocationId = 2,
                            TransportName = "Airplane"
                        },
                        new
                        {
                            TransportId = 3,
                            FkLocationId = 1,
                            TransportName = "Bus"
                        },
                        new
                        {
                            TransportId = 4,
                            FkLocationId = 3,
                            TransportName = "Bus"
                        },
                        new
                        {
                            TransportId = 5,
                            FkLocationId = 3,
                            TransportName = "Train"
                        },
                        new
                        {
                            TransportId = 6,
                            FkLocationId = 4,
                            TransportName = "Bus"
                        });
                });

            modelBuilder.Entity("commute.Entity.Transport", b =>
                {
                    b.HasOne("commute.Entity.Location", "Location")
                        .WithMany()
                        .HasForeignKey("FkLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });
#pragma warning restore 612, 618
        }
    }
}
